[{"/Users/ningxiao/Desktop/webDev/react/confusion/src/App.js":"1","/Users/ningxiao/Desktop/webDev/react/confusion/src/components/MenuComponent.js":"2","/Users/ningxiao/Desktop/webDev/react/confusion/src/shared/dishes.js":"3","/Users/ningxiao/Desktop/webDev/react/confusion/src/components/LoadingComponent.js":"4","/Users/ningxiao/Desktop/webDev/react/confusion/src/components/MainComponent.js":"5","/Users/ningxiao/Desktop/webDev/react/confusion/src/components/DishDetailComponent.js":"6","/Users/ningxiao/Desktop/webDev/react/confusion/src/shared/comments.js":"7","/Users/ningxiao/Desktop/webDev/react/confusion/src/index.js":"8","/Users/ningxiao/Desktop/webDev/react/confusion/src/components/HeaderComponent.js":"9","/Users/ningxiao/Desktop/webDev/react/confusion/src/components/FooterComponent.js":"10","/Users/ningxiao/Desktop/webDev/react/confusion/src/components/HomeComponenet.js":"11","/Users/ningxiao/Desktop/webDev/react/confusion/src/shared/promotions.js":"12","/Users/ningxiao/Desktop/webDev/react/confusion/src/shared/leaders.js":"13","/Users/ningxiao/Desktop/webDev/react/confusion/src/components/ContactComponent.js":"14","/Users/ningxiao/Desktop/webDev/react/confusion/src/components/AboutComponent.js":"15","/Users/ningxiao/Desktop/webDev/react/confusion/src/redux/configureStore.js":"16","/Users/ningxiao/Desktop/webDev/react/confusion/src/redux/comments.js":"17","/Users/ningxiao/Desktop/webDev/react/confusion/src/redux/ActionTypes.js":"18","/Users/ningxiao/Desktop/webDev/react/confusion/src/redux/ActionCreators.js":"19","/Users/ningxiao/Desktop/webDev/react/confusion/src/redux/dishes.js":"20","/Users/ningxiao/Desktop/webDev/react/confusion/src/redux/leaders.js":"21","/Users/ningxiao/Desktop/webDev/react/confusion/src/shared/baseUrl.js":"22","/Users/ningxiao/Desktop/webDev/react/confusion/src/redux/promotions.js":"23","/Users/ningxiao/Desktop/webDev/react/confusion/src/redux/forms.js":"24"},{"size":532,"mtime":1610570960535,"results":"25","hashOfConfig":"26"},{"size":1979,"mtime":1610932080427,"results":"27","hashOfConfig":"26"},{"size":1448,"mtime":1610402398295,"results":"28","hashOfConfig":"26"},{"size":247,"mtime":1609296293343,"results":"29","hashOfConfig":"26"},{"size":3646,"mtime":1610994268478,"results":"30","hashOfConfig":"26"},{"size":7683,"mtime":1610992259416,"results":"31","hashOfConfig":"26"},{"size":4117,"mtime":1609296346341,"results":"32","hashOfConfig":"26"},{"size":642,"mtime":1609358294313,"results":"33","hashOfConfig":"26"},{"size":5119,"mtime":1610560474736,"results":"34","hashOfConfig":"26"},{"size":2780,"mtime":1610395346617,"results":"35","hashOfConfig":"26"},{"size":1767,"mtime":1610992082397,"results":"36","hashOfConfig":"26"},{"size":435,"mtime":1610402433986,"results":"37","hashOfConfig":"26"},{"size":2345,"mtime":1610402463750,"results":"38","hashOfConfig":"26"},{"size":9759,"mtime":1610993297482,"results":"39","hashOfConfig":"26"},{"size":4994,"mtime":1610994222504,"results":"40","hashOfConfig":"26"},{"size":772,"mtime":1610827272179,"results":"41","hashOfConfig":"26"},{"size":601,"mtime":1610990540091,"results":"42","hashOfConfig":"26"},{"size":547,"mtime":1610993985501,"results":"43","hashOfConfig":"26"},{"size":6480,"mtime":1610993960926,"results":"44","hashOfConfig":"26"},{"size":584,"mtime":1610824778190,"results":"45","hashOfConfig":"26"},{"size":614,"mtime":1610994149036,"results":"46","hashOfConfig":"26"},{"size":48,"mtime":1610930438981,"results":"47","hashOfConfig":"26"},{"size":600,"mtime":1610931336497,"results":"48","hashOfConfig":"26"},{"size":162,"mtime":1610827206003,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"o21jqw",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ningxiao/Desktop/webDev/react/confusion/src/App.js",[],["103","104"],"/Users/ningxiao/Desktop/webDev/react/confusion/src/components/MenuComponent.js",[],"/Users/ningxiao/Desktop/webDev/react/confusion/src/shared/dishes.js",[],["105","106"],"/Users/ningxiao/Desktop/webDev/react/confusion/src/components/LoadingComponent.js",[],"/Users/ningxiao/Desktop/webDev/react/confusion/src/components/MainComponent.js",[],"/Users/ningxiao/Desktop/webDev/react/confusion/src/components/DishDetailComponent.js",["107","108","109"],"import React, { Component }  from \"react\";\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, \n    Button, Modal, ModalHeader, ModalBody, Label, Row, Col} from 'reactstrap'\nimport { Link } from \"react-router-dom\";\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Loading } from \"./LoadingComponent\";\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\n    function RenderDish({dish}) {\n        // console.log(dish)\n        if (dish != null) {\n            return(\n                <div className=\"col-12 col-md-5 m-1\">\n                    <FadeTransform\n                        in\n                        transformProps={{\n                            exitTransform: 'scale(0.5) translateY(-50%)'\n                        }}>\n                        <Card>\n                            <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\n                            <CardBody>\n                                <CardTitle>{dish.name}</CardTitle>\n                                <CardText>{dish.description}</CardText>\n                            </CardBody>\n                        </Card>\n                    </FadeTransform>\n                </div>\n            )\n        }\n        else{\n            return(\n                <div></div>\n            )\n        }\n    }\n\n    function RenderComments({comments, postComment, dishId}){\n        // console.log(comments)\n        if (comments != null) {\n            return (\n                <div className=\"col-12 col-md-5 m-1\">\n                    <h4>Comments</h4>\n                    <ul className=\"list-unstyled\">\n                        <Stagger in>\n                            {comments.map((comment) => {\n                                return (\n                                    <Fade in>\n                                        <li key={comment.id}>\n                                            <p>{comment.comment}</p>\n                                            <p>-- {comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\n                                        </li>\n                                    </Fade>\n                                );\n                            })}\n                        </Stagger>\n                    </ul>\n                    <CommentForm dishId={dishId} postComment={postComment}/>\n                    \n                </div>\n            );          \n        }\n        else{\n            return(\n                <div></div>\n            )\n        }\n    }\n\n    const DishDetail = (props) =>{\n        if(props.isLoading) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Loading />\n                    </div>\n                </div>\n            );\n        }\n        else if (props.errMess) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <h4>{props.errMess}</h4>\n                    </div>\n                </div>\n            );\n        }\n        // console.log(this.props.dishSelect)\n        if(props.dish != null){\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                        </Breadcrumb>\n                        <div className=\"col-12\">\n                            <h3>{props.dish.name}</h3>\n                            <hr />\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                            <RenderDish dish={props.dish} />\n                            <RenderComments comments={props.comments} postComment={props.postComment} dishId={props.dish.id}/>\n                    </div>\n                </div>\n            )}\n        else {\n            return(\n                <div></div>\n            )\n    }\n}\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nclass CommentForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isModalOpen: false\n        };\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    toggleModal() {\n        this.setState({\n          isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleSubmit(values) {\n\n        this.toggleModal();\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\n    }\n    render() {\n        return(\n            <div>\n                <Button outline onClick={this.toggleModal}><span className=\"fa fa-edit fa-lg\"></span>Submit Comment</Button>\n\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row  className=\"form-group\">\n                                <Label for=\"rating\" md={12}>Rating</Label>\n                                <Col  md={12}>\n                                    <Control.select model=\".rating\" id=\"rating\" name=\"rating\" className=\"form-control\" >\n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                        <option>4</option>\n                                        <option>5</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"author\"  md={12}>Your Name</Label>\n                                <Col  md={12}>\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\" placeholder=\"Author\" className=\"form-control\" validators={{ required, minLength: minLength(2), maxLength: maxLength(15) }} />\n                                    <Errors className=\"text-danger\" model=\".author\" show=\"touched\" messages={{ required: 'Required', minLength: 'Must be greater than 2 characters', maxLength: 'Must be 15 charaters or less' }} />\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"feedback\"  md={12}>Your feedback</Label>\n                                <Col  md={12}>\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\" resize=\"none\" rows=\"6\" className=\"form-control\" validators={{ required }} />\n                                    <Errors className=\"text-danger\" model=\".comment\" show=\"touched\" messages={{ required: 'Required' }} />\n                                </Col>\n                            </Row>\n\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n\n            </div>\n        )\n    }\n}\n\nexport default DishDetail","/Users/ningxiao/Desktop/webDev/react/confusion/src/shared/comments.js",[],"/Users/ningxiao/Desktop/webDev/react/confusion/src/index.js",[],"/Users/ningxiao/Desktop/webDev/react/confusion/src/components/HeaderComponent.js",[],"/Users/ningxiao/Desktop/webDev/react/confusion/src/components/FooterComponent.js",[],"/Users/ningxiao/Desktop/webDev/react/confusion/src/components/HomeComponenet.js",[],"/Users/ningxiao/Desktop/webDev/react/confusion/src/shared/promotions.js",[],"/Users/ningxiao/Desktop/webDev/react/confusion/src/shared/leaders.js",[],["110","111"],"/Users/ningxiao/Desktop/webDev/react/confusion/src/components/ContactComponent.js",["112","113","114","115","116","117","118"],"import React, {Component} from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from \"reactstrap\";\nimport {Link} from 'react-router-dom';\nimport { Control, Form, Errors} from \"react-redux-form\";\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9,_%=-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n\nclass Contact extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n    handleSubmit(values) {\n        this.props.postFeedback(values);\n        this.props.resetFeedbackForm();\n    }\n\n    render() {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Contact Us</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                    <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                            <h5>Our Address</h5>\n                            <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                            </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send Us Your Feedback</h3>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n                        <Form model=\"feedback\" onSubmit={(value) => this.handleSubmit(value)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" placeholder=\"First Name\" className=\"form-control\"\n                                    validators={{\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\n                                    }}/>\n                                <Errors \n                                    className=\"text-danger\"\n                                    model=\".firstname\"\n                                    show=\"touched\"\n                                    messages={{\n                                        requried: 'Required',\n                                        minLength: 'Must be greater than 2 characters',\n                                        maxLength: 'Must be 15 character or less'\n                                    }}\n                                />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" placeholder=\"Last Name\" className=\"form-control\"\n                                    validators={{\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\n                                    }}/>\n                                    <Errors \n                                    className=\"text-danger\"\n                                    model=\".lastname\"\n                                    show=\"touched\"\n                                    messages={{\n                                        requried: 'Required',\n                                        minLength: 'Must be greater than 2 characters',\n                                        maxLength: 'Must be 15 character or less'\n                                    }}\n                                />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel. </Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\" placeholder=\"Tel. Num\" className=\"form-control\"\n                                    validators={{\n                                        required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                    }}/>\n                                    <Errors \n                                    className=\"text-danger\"\n                                    model=\".telnum\"\n                                    show=\"touched\"\n                                    messages={{\n                                        requried: 'Required',\n                                        minLength: 'Must be greater than 2 numbers',\n                                        maxLength: 'Must be 15 numbers or less',\n                                        isNumber: 'Must be a number'\n                                    }}\n                                />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control text model=\".email\" id=\"email\" name=\"email\" placeholder=\"Email\" className=\"form-control\"\n                                    validators={{\n                                        required, validEmail\n                                    }}/>\n                                    <Errors \n                                    className=\"text-danger\"\n                                    model=\".email\"\n                                    show=\"touched\"\n                                    messages={{\n                                        requried: 'Required',\n                                        validEmail: 'Invalid Email Address'\n                                    }}\n                                />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 6, offsete: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\" className=\"form-check-input\" name=\"agree\"/> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                    \n                                <Col md={{size: 3, offsete: 1}}>\n                                    <Control.select model=\".contactType\" name=\"contactType\" className='form-control'>\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\" rows=\"12\" className=\"form-control\"/>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size:10, offset:2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    \n}\n\nexport default Contact;","/Users/ningxiao/Desktop/webDev/react/confusion/src/components/AboutComponent.js",["119"],"/Users/ningxiao/Desktop/webDev/react/confusion/src/redux/configureStore.js",[],"/Users/ningxiao/Desktop/webDev/react/confusion/src/redux/comments.js",[],"/Users/ningxiao/Desktop/webDev/react/confusion/src/redux/ActionTypes.js",[],"/Users/ningxiao/Desktop/webDev/react/confusion/src/redux/ActionCreators.js",[],"/Users/ningxiao/Desktop/webDev/react/confusion/src/redux/dishes.js",[],"/Users/ningxiao/Desktop/webDev/react/confusion/src/redux/leaders.js",[],"/Users/ningxiao/Desktop/webDev/react/confusion/src/shared/baseUrl.js",[],"/Users/ningxiao/Desktop/webDev/react/confusion/src/redux/promotions.js",[],"/Users/ningxiao/Desktop/webDev/react/confusion/src/redux/forms.js",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"120","replacedBy":"124"},{"ruleId":"122","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":153,"column":37,"nodeType":"128","endLine":153,"endColumn":121},{"ruleId":"126","severity":1,"message":"129","line":165,"column":37,"nodeType":"128","endLine":165,"endColumn":218},{"ruleId":"126","severity":1,"message":"130","line":173,"column":37,"nodeType":"128","endLine":173,"endColumn":176},{"ruleId":"120","replacedBy":"131"},{"ruleId":"122","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":60,"column":29,"nodeType":"128","endLine":60,"endColumn":71},{"ruleId":"126","severity":1,"message":"129","line":74,"column":37,"nodeType":"128","endLine":77,"endColumn":41},{"ruleId":"126","severity":1,"message":"129","line":93,"column":37,"nodeType":"128","endLine":96,"endColumn":41},{"ruleId":"126","severity":1,"message":"129","line":112,"column":37,"nodeType":"128","endLine":115,"endColumn":41},{"ruleId":"126","severity":1,"message":"135","line":151,"column":45,"nodeType":"128","endLine":151,"endColumn":121},{"ruleId":"126","severity":1,"message":"127","line":158,"column":37,"nodeType":"128","endLine":158,"endColumn":118},{"ruleId":"126","severity":1,"message":"130","line":167,"column":37,"nodeType":"128","endLine":167,"endColumn":136},{"ruleId":"136","severity":1,"message":"137","line":4,"column":10,"nodeType":"138","messageId":"139","endLine":4,"endColumn":23},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],["140"],["141"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE",["140"],["141"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","no-unused-vars","'FadeTransform' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]